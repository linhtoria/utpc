{"version":3,"sources":["Components/Navbar.js","history.js","Components/About.js","Components/Home.js","Components/Contact.js","Components/Data.js","Components/Leaderboard.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","Component","createBrowserHistory","About","Home","Contact","range","len","arr","i","push","newPerson","Math","random","sum","floor","username","namor","generate","words","numbers","rank","c1","c2","total","makeData","map","d","children","Leaderboard","state","data","this","id","columns","Header","accessor","defaultPageSize","style","height","App","history","History","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1883db3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n  render() {\n    return (\n        <div className=\"Nav-container\">\n            <a className=\"Nav-item\" href=\"/\">Home</a>\n            <a className=\"Nav-item\" href=\"/about\">About</a>\n            <a className=\"Nav-item\" href=\"/leaderboard\">Leaderboard</a>\n            <a className=\"Nav-item\" href=\"/contact\">Contact</a>\n        </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import {createBrowserHistory} from 'history'\nexport default createBrowserHistory();\n","import React, { Component } from 'react';\nimport './Page.css';\n\nclass About extends Component {\n    render() {\n      return (\n         <div className=\"About-container\">\n           <p className=\"header\">About</p>\n           <p className=\"content\">UT Programming Contest (UTPC) is a chapter of the International Collegiate <br/> Programming Contest (ICPC). </p>\n           <p className=\"content\"> We put on bi-weekly competitive programming contests on Fridays <br/> in GDC 2.216, everyone is welcomed!</p> \n           <p className=\"content\"> In addition, there is a one-hour\n              <a href=\"https://www.cs.utexas.edu/users/downing/cs104c/\"> competitive programming class</a> taught at UT. <br/> Reach out to <a href=\"https://www.cs.utexas.edu/users/evouga/\">\n              Professor Vouga</a> or UTPC officers if you want to learn more.\n          </p>\n         </div>\n     );\n   }\n }\n\nexport default About;\n","import React, { Component } from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n  render() {\n    return (\n        <div>\n        <h1 className=\"head\">UTPC</h1>\n        <a className=\"subtitle\" href=\"/contact\">ICPC & Competitive Programming.</a>\n        <p className=\"subtitle\"> Powered by <a href=\"https://www.citadel.com/\">Citadel & </a><a href=\"https://www.citadelsecurities.com/\">Citadel Securities.</a></p> \n        </div> \n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'; import './Page.css';\n\nclass Contact extends Component {\n    render() {\n      return (\n         <div className=\"Page-container\">\n          <p className=\"header\">Contact</p>\n          <ul className=\"content\">\n            <li>Kevin Chen - Co-President</li>\n            <li>Aditya Durvasula - Co-President</li>\n            <li>Antony Yun - Sponsorships & Finance</li>\n            <li>Aditya Arjun - Logistics</li>\n            <li>Kevin Li - Tech</li>\n            <li>Linh Nguyen - Outreach</li>\n          </ul>\n         </div>\n     );\n   }\n }\n\nexport default Contact;\n","import React from 'react';\nimport namor from 'namor';\n\nconst range = len => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nconst newPerson = () => {\n  const statusChance = Math.random();\n  const c1 = Math.floor(Math.random() * 215);\n  const c2 = Math.floor(Math.random() * 215);\n  const sum = c1 + c2;\n \n  return {\n    username: namor.generate({ words: 1, numbers: 0 }),\n    rank: Math.floor(Math.random() * 300) + 1,\n    c1: Math.floor(Math.random() * 215),\n    c2: Math.floor(Math.random() * 215),\n    total: sum,\n  };\n};\n\nexport function makeData(len = 5553) {\n  return range(len).map(d => {\n    return {\n      ...newPerson(),\n      children: range(10).map(newPerson)\n    };\n  });\n}\n","import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport {makeData} from './Data.js';\nimport './Leaderboard.css';\nimport 'react-table/react-table.css';\n\nclass Leaderboard extends Component {\n    constructor() {\n    super();\n    this.state = {\n      data: makeData()\n    };\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <div id=\"table\">\n        <ReactTable\n          data={data}\n          columns={[\n            {\n                Header: 'Rank',\n                accessor: 'rank'\n            },\n            {\n                Header: 'Username',\n                accessor: 'username'\n            },\n            {\n                Header: 'C1',\n                accessor: 'c1'\n            },\n            {\n                Header: 'C2',\n                accessor: 'c2'\n            },\n\n            {\n                Header: 'Total',\n                accessor: 'total'\n            },\n          ]}\n          defaultPageSize={20}\n          style={{\n            height: \"400px\" // This will force the table body to overflow and scroll, since there is not enough room\n          }}\n          className=\"-striped -highlight\"\n        />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default Leaderboard;\n","import React from 'react';\nimport Navbar from './Components/Navbar.js'\nimport {Router, Route, Switch, Redirect} from 'react-router-dom';\nimport History from './history.js';\nimport About from './Components/About.js';\nimport Home from './Components/Home.js';\nimport Contact from './Components/Contact.js';\nimport Leaderboard from './Components/Leaderboard.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router history={History}>\n           <Switch>\n             <Route exact path=\"/about\" component={About}/>\n             <Route exact path=\"/leaderboard\" component={Leaderboard}/>\n             <Route exact path=\"/contact\" component={Contact}/>\n             <Route exact path=\"/\" component={Home}/>\n           </Switch>\n        </Router>\n        <Navbar/> \n        <footer className=\"footer\">Â©Linh Nguyen</footer>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}